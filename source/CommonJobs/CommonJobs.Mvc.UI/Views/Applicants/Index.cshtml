@model CommonJobs.Infrastructure.ApplicantSearching.ApplicantSearchParameters
@{
    ViewBag.Title = "Postulantes | CommonJobs";
    ScriptManager.RegisterCss(Url.Content("~/Content/ie.css"), priority: 500, htmlAttributes: new { media = "screen" }, patchCondition: "lte IE 9");
    ScriptManager.RegisterCss(Url.Content("~/Content/1140.css"), priority: 500, htmlAttributes: new { media = "screen" });
    ScriptManager.RegisterCss(Url.Content("~/Content/reset.css"), priority: 500);
    ScriptManager.RegisterCss(Url.Content("~/Content/ApplicantsListing/ApplicantsListing.less"));
    ScriptManager.RegisterJs(Url.Content("~/Content/ListingCommon/QuickSearch.js"));
    ScriptManager.RegisterJs(Url.Content("~/Content/ApplicantsListing/ApplicantsListing.js"));
}
<script type="text/template" id="add-new-card-template">
    <div class="card column clickable add-new-card file-dropzone fade well">
        <img class="cardPicture" src="@Url.Content("~/Content/Images/AddEmployee.png")" alt="Agregar nuevo..."  />
        <input type="file" data-url="@Url.Action("QuickAttachment")" multiple>
        <div class="cardDescription">
            <p>@Html.ActionLink("Agregar nuevo...", "Create", null, new { @class = "clickable-link" })</p>
        </div>
    </div>
</script>

<script type="text/template" id="get-more-items-template">
    <div class="card column loading get-more-items">
        <p class="ready-content">Click para obtener más...</p>
    </div>
</script>

<script type="text/template" id="card-template">
    <% _.each(model.items, function(item) { %>
        <div class="card column clickable item-card <%= item.IsHighlighted ? "highlighted" : "" %> file-dropzone fade well">
            <input type="file" data-url="@Url.Action("QuickAttachment")<%= item.Id %>" multiple>
            <div class="cardDescription">
                <p class="name"><a class="clickable-link" href="<%= urlGenerator.action("Edit", "Applicants", item.Id) %>">
                    <% if (item.FirstName || item.LastName) { %>
                        <%= item.LastName %>, <%= item.FirstName %>
                    <% } else { %>
                        <i>Sin nombre</i>
                    <% } %>
                </a></p>
                <p class="employeeProject"><%= item.CurrentProject %></p>
                <p class="position"><%= item.Companies ? item.Companies.join(", ", item.Companies) : "<i>(Sin experiencia previa)</i>" %></p>
                <p class="tags">
                    <% if (_.isString(item.Skills)) { 
                        _.each(item.Skills.split(','), function(tag) { %>
                            <span class="tag"><%= $.trim(tag) %></span>
                        <% });
                    } %>
                </p>
            </div>
        </div>
    <% }) %>
</script>
<div class="container searchContainer">
    <h1>Postulantes</h1>

    <div class="row">
        <div class="twocol"></div>
        <div class="eightcol quickSearchContainer">
            <form method="get" action="javascript:void(0);">
                <div class="mainSearch">
                    <label for="quickSearch">Búsqueda rápida:</label>
                    <input type="text" id="quickSearch" name="Term" value="@Model.Term" />
                    <input type="submit" id="quickSearchSubmit" value=">>" />
                </div>
                <div class="secondarySearch">
                    <label>Resaltado</label><input type="checkbox" id="HighlightedCheck" name="Highlighted" @(Model.Highlighted ? "checked='checked'" : string.Empty) />
                    <label>¿Con entrevistas?</label><input type="checkbox" id="HaveInterviewCheck" name="HaveInterview" @(Model.HaveInterview ? "checked='checked'" : string.Empty)/>
                    <label>¿Con entrevistas técnicas?</label><input type="checkbox" id="HaveTechnicalInterviewCheck" name="HaveTechnicalInterview" @(Model.HaveTechnicalInterview ? "checked='checked'" : string.Empty) />
                    <br /><label>¿Buscar en adjuntos?</label><input type="checkbox" id="SearchInAttachmentsCheck" name="SearchInAttachments" @(Model.SearchInAttachments ? "checked='checked'" : string.Empty) />
                </div>
            </form>
            <p id="resultCountNotice">Hay <span id="resultCount">0</span> resultado(s).</p>
        </div>
        <div class="twocol last"></div>
    </div>
</div>
<div class="results">
</div>
<div class="bootstrap-scope">
    <div class="modal fade" id="upload-error-modal">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3 class="title" style="color: red">Error uploading</h3>
        </div>
        <div class="modal-body">
            <ul class="file-list">
            </ul>
            <p class="text"></p>
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Cerrar</a>
        </div>
    </div>
    <div class="modal fade" id="upload-ok-modal">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3 class="title">Archivos subidos</h3>
        </div>
        <div class="modal-body">
            <ul class="file-list">
            </ul>
            <br />
            <a class="detail-link" href="#">Ver detalle del postulante</a>
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Cerrar</a>
        </div>
    </div>
</div>
