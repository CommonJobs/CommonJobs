@model IEnumerable<CommonJobs.Infrastructure.ApplicantSearching.ApplicantSearchResult>
@using CommonJobs.Utilities;

@{
    Layout = null;
    
    <div class="card column" id="addNewCard">
        <img class="cardPicture" src="@Url.Content("~/Content/Images/AddEmployee.png")" alt="Agregar nuevo..."  />
        <div class="cardDescription">
            <p>@Html.ActionLink("Agregar nuevo...", "Create", null, new { @class = "card-link" })</p>
        </div>
    </div>
        
    foreach (var applicant in Model)
    {
        var highlightedClass = applicant.IsHighlighted ? "highlighted" : "";
        
        <div class="card column @highlightedClass">
            <div class="cardDescription">
                <p class="name">@Html.ActionLink(applicant.FirstName + " " + applicant.LastName, "Edit", new { id = applicant.Id }, new { @class = "card-link" })</p>
                <p class="position">@(applicant.Companies.EmptyIfNull().Any() ? string.Join(", ", applicant.Companies) : "(Sin experiencia previa)")</p>
                <p class="tags">
                    @{
                        //TODO replace with a collection of skills, order from most skilled to less
                        var tags = string.IsNullOrEmpty(applicant.Skills)
                            ? Enumerable.Empty<string>()
                            : applicant.Skills.Split(',');
                        foreach (var tag in tags)
                        {
                            <span class="tag">@tag</span>
                        }
                    }
                </p>
            </div>
        </div>
    }
}